////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///
/// Copyright (C) 2017 by Lucas Brémond
///
/// This file is part of the Spacer project.
///
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/// @file                       Spacer/Core/Logger/Sink.hpp
/// @author                     Lucas Brémond <lucas.bremond@gmail.com>
/// @date                       20 Dec 2017

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __Spacer_Core_Logger_Sink__
#define __Spacer_Core_Logger_Sink__

#include <Spacer/Core/Types/Unique.hpp>
#include <Spacer/Core/Types/String.hpp>
#include <Spacer/Core/Logger/Severity.hpp>
#include <Spacer/Core/Logger/Sinks/Sink.hpp>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace spacer
{
namespace core
{
namespace logger
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

using spacer::core::types::Unique ;
using spacer::core::types::String ;
using spacer::core::logger::Severity ;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/// @brief                      Log sink

class Sink
{

    public:

                                Sink                                        (   const   sinks::Sink&                aSink                               ) ;

                                Sink                                        (   const   Sink&                       aSink                               ) ;

        void                    enable                                      ( ) ;
        void                    disable                                     ( ) ;

        void                    addChannel                                  (   const   String&                     aChannel                            ) ;
        void                    removeChannel                               (   const   String&                     aChannel                            ) ;

        static Sink             Console                                     (   const   Severity&                   aSeverity                           ) ;

    private:

        Unique<sinks::Sink>     sinkUPtr_ ;

} ;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}
}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////