////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
///
/// Copyright (C) 2017 by Lucas Brémond
///
/// This file is part of the Spacer project.
///
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/// @file                       Spacer/Core/Containers/Tuple.hpp
/// @author                     Lucas Brémond <lucas.bremond@gmail.com>
/// @date                       11 Dec 2017

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef __Spacer_Core_Containers_Tuple__
#define __Spacer_Core_Containers_Tuple__

#include <tuple>
#include <ostream>

#include <Spacer/Core/Types/Index.hpp>
#include <Spacer/Core/Types/Size.hpp>
#include <Spacer/Core/Types/String.hpp>
#include <Spacer/Core/Containers/Object.hpp>

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

namespace spacer
{
namespace core
{
namespace ctnr
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

using spacer::core::types::Index ;
using spacer::core::types::Size ;
using spacer::core::types::String ;

using spacer::core::ctnr::Object ;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/// @brief                      Tuple container

template <typename... Args> using Tuple = std::tuple<Args...> ;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

}
}
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#endif

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////